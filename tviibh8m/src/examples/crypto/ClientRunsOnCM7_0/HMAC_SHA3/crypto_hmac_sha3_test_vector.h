/***************************************************************************//**
* \file crypto_hmac_sha3_test_vector.h
*
* \version 1.0
*
* \brief Supporting example file
*
********************************************************************************
* \copyright
* Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
* You may use this file only in accordance with the license, terms, conditions,
* disclaimers, and limitations in the end user license agreement accompanying
* the software package with which this file was provided.
*******************************************************************************/

#ifndef __CRYPTO_HMAC_SHA3_TEST_VECTOR__
#define __CRYPTO_HMAC_SHA3_TEST_VECTOR__

#ifdef __CRYPTO_ENABLE_TEST_VECTOR__

/* http://www.wolfgang-ehrhardt.de/hmac-sha3-testvectors.html */

/*******************************************************************************
* HMAC-SHA-224
********************************************************************************/
#define HMAC_SHA3_224_NUMBER_OF_TEST (9)

const uint8_t HMAC_SHA3_224_Vector0_Msg0[] = 
{
    0x48,0x69,0x20,0x54,0x68,0x65,0x72,0x65,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg1[] = 
{
    0x77,0x68,0x61,0x74,0x20,0x64,0x6f,0x20,0x79,0x61,0x20,0x77,0x61,0x6e,0x74,0x20,0x66,0x6f,0x72,0x20,0x6e,0x6f,0x74,0x68,0x69,0x6e,0x67,0x3f,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg2[] = 
{
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg3[] = 
{
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg4[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x57,0x69,0x74,0x68,0x20,0x54,0x72,0x75,0x6e,0x63,0x61,
    0x74,0x69,0x6f,0x6e,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg5[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg6[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg7[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};
const uint8_t HMAC_SHA3_224_Vector0_Msg8[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};

const uint8_t * const HMAC_SHA3_224_MsgPtr[HMAC_SHA3_224_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_224_Vector0_Msg0,
    HMAC_SHA3_224_Vector0_Msg1,
    HMAC_SHA3_224_Vector0_Msg2,
    HMAC_SHA3_224_Vector0_Msg3,
    HMAC_SHA3_224_Vector0_Msg4,
    HMAC_SHA3_224_Vector0_Msg5,
    HMAC_SHA3_224_Vector0_Msg6,
    HMAC_SHA3_224_Vector0_Msg7,
    HMAC_SHA3_224_Vector0_Msg8,
};
const uint32_t HMAC_SHA3_224_MsgLen[HMAC_SHA3_224_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_224_Vector0_Msg0),
    sizeof(HMAC_SHA3_224_Vector0_Msg1),
    sizeof(HMAC_SHA3_224_Vector0_Msg2),
    sizeof(HMAC_SHA3_224_Vector0_Msg3),
    sizeof(HMAC_SHA3_224_Vector0_Msg4),
    sizeof(HMAC_SHA3_224_Vector0_Msg5),
    sizeof(HMAC_SHA3_224_Vector0_Msg6),
    sizeof(HMAC_SHA3_224_Vector0_Msg7),
    sizeof(HMAC_SHA3_224_Vector0_Msg8),
};

const uint8_t HMAC_SHA3_224_Vector0_Key0[] = {0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,};
const uint8_t HMAC_SHA3_224_Vector0_Key1[] = {0x4a,0x65,0x66,0x65,};
const uint8_t HMAC_SHA3_224_Vector0_Key2[] = {0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa};
const uint8_t HMAC_SHA3_224_Vector0_Key3[] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19};
const uint8_t HMAC_SHA3_224_Vector0_Key4[] = {0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c};
const uint8_t HMAC_SHA3_224_Vector0_Key5[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};
const uint8_t HMAC_SHA3_224_Vector0_Key6[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};

const uint8_t HMAC_SHA3_224_hash_ref[HMAC_SHA3_224_NUMBER_OF_TEST][224/8] = 
{
    {0x3b,0x16,0x54,0x6b,0xbc,0x7b,0xe2,0x70,0x6a,0x03,0x1d,0xca,0xfd,0x56,0x37,0x3d,0x98,0x84,0x36,0x76,0x41,0xd8,0xc5,0x9a,0xf3,0xc8,0x60,0xf7},
    {0x7f,0xdb,0x8d,0xd8,0x8b,0xd2,0xf6,0x0d,0x1b,0x79,0x86,0x34,0xad,0x38,0x68,0x11,0xc2,0xcf,0xc8,0x5b,0xfa,0xf5,0xd5,0x2b,0xba,0xce,0x5e,0x66},
    {0x67,0x6c,0xfc,0x7d,0x16,0x15,0x36,0x38,0x78,0x03,0x90,0x69,0x2b,0xe1,0x42,0xd2,0xdf,0x7c,0xe9,0x24,0xb9,0x09,0xc0,0xc0,0x8d,0xbf,0xdc,0x1a},
    {0xa9,0xd7,0x68,0x5a,0x19,0xc4,0xe0,0xdb,0xd9,0xdf,0x25,0x56,0xcc,0x8a,0x7d,0x2a,0x77,0x33,0xb6,0x76,0x25,0xce,0x59,0x4c,0x78,0x27,0x0e,0xeb},
    {0x49,0xfd,0xd3,0xab,0xd0,0x05,0xeb,0xb8,0xae,0x63,0xfe,0xa9,0x46,0xd1,0x88,0x3c},
    {0xb4,0xa1,0xf0,0x4c,0x00,0x28,0x7a,0x9b,0x7f,0x60,0x75,0xb3,0x13,0xd2,0x79,0xb8,0x33,0xbc,0x8f,0x75,0x12,0x43,0x52,0xd0,0x5f,0xb9,0x99,0x5f},
    {0xb9,0x6d,0x73,0x0c,0x14,0x8c,0x2d,0xaa,0xd8,0x64,0x9d,0x83,0xde,0xfa,0xa3,0x71,0x97,0x38,0xd3,0x47,0x75,0x39,0x7b,0x75,0x71,0xc3,0x85,0x15},
    {0x05,0xd8,0xcd,0x6d,0x00,0xfa,0xea,0x8d,0x1e,0xb6,0x8a,0xde,0x28,0x73,0x0b,0xbd,0x3c,0xba,0xb6,0x92,0x9f,0x0a,0x08,0x6b,0x29,0xcd,0x62,0xa0},
    {0xc7,0x9c,0x9b,0x09,0x34,0x24,0xe5,0x88,0xa9,0x87,0x8b,0xbc,0xb0,0x89,0xe0,0x18,0x27,0x00,0x96,0xe9,0xb4,0xb1,0xa9,0xe8,0x22,0x0c,0x86,0x6a},
};

const uint32_t HMAC_SHA3_224_MacLen[HMAC_SHA3_224_NUMBER_OF_TEST] = 
{
    28,28,28,28,16,28,28,28,28,
};

const uint8_t * const HMAC_SHA3_224_KeyPtr[HMAC_SHA3_224_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_224_Vector0_Key0,
    HMAC_SHA3_224_Vector0_Key1,
    HMAC_SHA3_224_Vector0_Key2,
    HMAC_SHA3_224_Vector0_Key3,
    HMAC_SHA3_224_Vector0_Key4,
    HMAC_SHA3_224_Vector0_Key5,
    HMAC_SHA3_224_Vector0_Key6,
    HMAC_SHA3_224_Vector0_Key5,
    HMAC_SHA3_224_Vector0_Key6,
};

const uint32_t HMAC_SHA3_224_KeyLen[HMAC_SHA3_224_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_224_Vector0_Key0),
    sizeof(HMAC_SHA3_224_Vector0_Key1),
    sizeof(HMAC_SHA3_224_Vector0_Key2),
    sizeof(HMAC_SHA3_224_Vector0_Key3),
    sizeof(HMAC_SHA3_224_Vector0_Key4),
    sizeof(HMAC_SHA3_224_Vector0_Key5),
    sizeof(HMAC_SHA3_224_Vector0_Key6),
    sizeof(HMAC_SHA3_224_Vector0_Key5),
    sizeof(HMAC_SHA3_224_Vector0_Key6),
};
uint8_t HMAC_SHA3_224_hash[HMAC_SHA3_224_NUMBER_OF_TEST][224/8];

/*******************************************************************************
* HMAC-SHA-256
********************************************************************************/
#define HMAC_SHA3_256_NUMBER_OF_TEST (9)

const uint8_t HMAC_SHA3_256_Vector0_Msg0[] = 
{
    0x48,0x69,0x20,0x54,0x68,0x65,0x72,0x65,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg1[] = 
{
    0x77,0x68,0x61,0x74,0x20,0x64,0x6f,0x20,0x79,0x61,0x20,0x77,0x61,0x6e,0x74,0x20,0x66,0x6f,0x72,0x20,0x6e,0x6f,0x74,0x68,0x69,0x6e,0x67,0x3f,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg2[] = 
{
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg3[] = 
{
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg4[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x57,0x69,0x74,0x68,0x20,0x54,0x72,0x75,0x6e,0x63,0x61,
    0x74,0x69,0x6f,0x6e,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg5[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg6[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg7[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};
const uint8_t HMAC_SHA3_256_Vector0_Msg8[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};

const uint8_t * const HMAC_SHA3_256_MsgPtr[HMAC_SHA3_256_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_256_Vector0_Msg0,
    HMAC_SHA3_256_Vector0_Msg1,
    HMAC_SHA3_256_Vector0_Msg2,
    HMAC_SHA3_256_Vector0_Msg3,
    HMAC_SHA3_256_Vector0_Msg4,
    HMAC_SHA3_256_Vector0_Msg5,
    HMAC_SHA3_256_Vector0_Msg6,
    HMAC_SHA3_256_Vector0_Msg7,
    HMAC_SHA3_256_Vector0_Msg8,
};
const uint32_t HMAC_SHA3_256_MsgLen[HMAC_SHA3_256_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_256_Vector0_Msg0),
    sizeof(HMAC_SHA3_256_Vector0_Msg1),
    sizeof(HMAC_SHA3_256_Vector0_Msg2),
    sizeof(HMAC_SHA3_256_Vector0_Msg3),
    sizeof(HMAC_SHA3_256_Vector0_Msg4),
    sizeof(HMAC_SHA3_256_Vector0_Msg5),
    sizeof(HMAC_SHA3_256_Vector0_Msg6),
    sizeof(HMAC_SHA3_256_Vector0_Msg7),
    sizeof(HMAC_SHA3_256_Vector0_Msg8),
};

const uint8_t HMAC_SHA3_256_Vector0_Key0[] = {0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,};
const uint8_t HMAC_SHA3_256_Vector0_Key1[] = {0x4a,0x65,0x66,0x65,};
const uint8_t HMAC_SHA3_256_Vector0_Key2[] = {0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa};
const uint8_t HMAC_SHA3_256_Vector0_Key3[] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19};
const uint8_t HMAC_SHA3_256_Vector0_Key4[] = {0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c};
const uint8_t HMAC_SHA3_256_Vector0_Key5[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};
const uint8_t HMAC_SHA3_256_Vector0_Key6[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};

const uint8_t HMAC_SHA3_256_hash_ref[HMAC_SHA3_256_NUMBER_OF_TEST][256/8] = 
{
    {0xba,0x85,0x19,0x23,0x10,0xdf,0xfa,0x96,0xe2,0xa3,0xa4,0x0e,0x69,0x77,0x43,0x51,0x14,0x0b,0xb7,0x18,0x5e,0x12,0x02,0xcd,0xcc,0x91,0x75,0x89,0xf9,0x5e,0x16,0xbb},
    {0xc7,0xd4,0x07,0x2e,0x78,0x88,0x77,0xae,0x35,0x96,0xbb,0xb0,0xda,0x73,0xb8,0x87,0xc9,0x17,0x1f,0x93,0x09,0x5b,0x29,0x4a,0xe8,0x57,0xfb,0xe2,0x64,0x5e,0x1b,0xa5},
    {0x84,0xec,0x79,0x12,0x4a,0x27,0x10,0x78,0x65,0xce,0xdd,0x8b,0xd8,0x2d,0xa9,0x96,0x5e,0x5e,0xd8,0xc3,0x7b,0x0a,0xc9,0x80,0x05,0xa7,0xf3,0x9e,0xd5,0x8a,0x42,0x07},
    {0x57,0x36,0x6a,0x45,0xe2,0x30,0x53,0x21,0xa4,0xbc,0x5a,0xa5,0xfe,0x2e,0xf8,0xa9,0x21,0xf6,0xaf,0x82,0x73,0xd7,0xfe,0x7b,0xe6,0xcf,0xed,0xb3,0xf0,0xae,0xa6,0xd7},
    {0x6e,0x02,0xc6,0x45,0x37,0xfb,0x11,0x80,0x57,0xab,0xb7,0xfb,0x66,0xa2,0x3b,0x3c},
    {0xed,0x73,0xa3,0x74,0xb9,0x6c,0x00,0x52,0x35,0xf9,0x48,0x03,0x2f,0x09,0x67,0x4a,0x58,0xc0,0xce,0x55,0x5c,0xfc,0x1f,0x22,0x3b,0x02,0x35,0x65,0x60,0x31,0x2c,0x3b},
    {0xa6,0x07,0x2f,0x86,0xde,0x52,0xb3,0x8b,0xb3,0x49,0xfe,0x84,0xcd,0x6d,0x97,0xfb,0x6a,0x37,0xc4,0xc0,0xf6,0x2a,0xae,0x93,0x98,0x11,0x93,0xa7,0x22,0x9d,0x34,0x67},
    {0x65,0xc5,0xb0,0x6d,0x4c,0x3d,0xe3,0x2a,0x7a,0xef,0x87,0x63,0x26,0x1e,0x49,0xad,0xb6,0xe2,0x29,0x3e,0xc8,0xe7,0xc6,0x1e,0x8d,0xe6,0x17,0x01,0xfc,0x63,0xe1,0x23},
    {0xe6,0xa3,0x6d,0x9b,0x91,0x5f,0x86,0xa0,0x93,0xca,0xc7,0xd1,0x10,0xe9,0xe0,0x4c,0xf1,0xd6,0x10,0x0d,0x30,0x47,0x55,0x09,0xc2,0x47,0x5f,0x57,0x1b,0x75,0x8b,0x5a},
};

const uint32_t HMAC_SHA3_256_MacLen[HMAC_SHA3_256_NUMBER_OF_TEST] = 
{
    32,32,32,32,16,32,32,32,32,
};

const uint8_t * const HMAC_SHA3_256_KeyPtr[HMAC_SHA3_256_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_256_Vector0_Key0,
    HMAC_SHA3_256_Vector0_Key1,
    HMAC_SHA3_256_Vector0_Key2,
    HMAC_SHA3_256_Vector0_Key3,
    HMAC_SHA3_256_Vector0_Key4,
    HMAC_SHA3_256_Vector0_Key5,
    HMAC_SHA3_256_Vector0_Key6,
    HMAC_SHA3_256_Vector0_Key5,
    HMAC_SHA3_256_Vector0_Key6,
};

const uint32_t HMAC_SHA3_256_KeyLen[HMAC_SHA3_256_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_256_Vector0_Key0),
    sizeof(HMAC_SHA3_256_Vector0_Key1),
    sizeof(HMAC_SHA3_256_Vector0_Key2),
    sizeof(HMAC_SHA3_256_Vector0_Key3),
    sizeof(HMAC_SHA3_256_Vector0_Key4),
    sizeof(HMAC_SHA3_256_Vector0_Key5),
    sizeof(HMAC_SHA3_256_Vector0_Key6),
    sizeof(HMAC_SHA3_256_Vector0_Key5),
    sizeof(HMAC_SHA3_256_Vector0_Key6),
};
uint8_t HMAC_SHA3_256_hash[HMAC_SHA3_256_NUMBER_OF_TEST][256/8];


/*******************************************************************************
* HMAC-SHA-384
********************************************************************************/
#define HMAC_SHA3_384_NUMBER_OF_TEST (9)

const uint8_t HMAC_SHA3_384_Vector0_Msg0[] = 
{
    0x48,0x69,0x20,0x54,0x68,0x65,0x72,0x65,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg1[] = 
{
    0x77,0x68,0x61,0x74,0x20,0x64,0x6f,0x20,0x79,0x61,0x20,0x77,0x61,0x6e,0x74,0x20,0x66,0x6f,0x72,0x20,0x6e,0x6f,0x74,0x68,0x69,0x6e,0x67,0x3f,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg2[] = 
{
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg3[] = 
{
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg4[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x57,0x69,0x74,0x68,0x20,0x54,0x72,0x75,0x6e,0x63,0x61,
    0x74,0x69,0x6f,0x6e,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg5[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg6[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg7[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};
const uint8_t HMAC_SHA3_384_Vector0_Msg8[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};

const uint8_t * const HMAC_SHA3_384_MsgPtr[HMAC_SHA3_384_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_384_Vector0_Msg0,
    HMAC_SHA3_384_Vector0_Msg1,
    HMAC_SHA3_384_Vector0_Msg2,
    HMAC_SHA3_384_Vector0_Msg3,
    HMAC_SHA3_384_Vector0_Msg4,
    HMAC_SHA3_384_Vector0_Msg5,
    HMAC_SHA3_384_Vector0_Msg6,
    HMAC_SHA3_384_Vector0_Msg7,
    HMAC_SHA3_384_Vector0_Msg8,
};
const uint32_t HMAC_SHA3_384_MsgLen[HMAC_SHA3_384_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_384_Vector0_Msg0),
    sizeof(HMAC_SHA3_384_Vector0_Msg1),
    sizeof(HMAC_SHA3_384_Vector0_Msg2),
    sizeof(HMAC_SHA3_384_Vector0_Msg3),
    sizeof(HMAC_SHA3_384_Vector0_Msg4),
    sizeof(HMAC_SHA3_384_Vector0_Msg5),
    sizeof(HMAC_SHA3_384_Vector0_Msg6),
    sizeof(HMAC_SHA3_384_Vector0_Msg7),
    sizeof(HMAC_SHA3_384_Vector0_Msg8),
};

const uint8_t HMAC_SHA3_384_Vector0_Key0[] = {0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,};
const uint8_t HMAC_SHA3_384_Vector0_Key1[] = {0x4a,0x65,0x66,0x65,};
const uint8_t HMAC_SHA3_384_Vector0_Key2[] = {0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa};
const uint8_t HMAC_SHA3_384_Vector0_Key3[] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19};
const uint8_t HMAC_SHA3_384_Vector0_Key4[] = {0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c};
const uint8_t HMAC_SHA3_384_Vector0_Key5[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};
const uint8_t HMAC_SHA3_384_Vector0_Key6[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};

const uint8_t HMAC_SHA3_384_hash_ref[HMAC_SHA3_384_NUMBER_OF_TEST][384/8] = 
{
    {0x68,0xd2,0xdc,0xf7,0xfd,0x4d,0xdd,0x0a,0x22,0x40,0xc8,0xa4,0x37,0x30,0x5f,0x61,0xfb,0x73,0x34,0xcf,0xb5,0xd0,0x22,0x6e,0x1b,0xc2,0x7d,0xc1,0x0a,0x2e,0x72,0x3a,0x20,0xd3,0x70,0xb4,0x77,0x43,0x13,0x0e,0x26,0xac,0x7e,0x3d,0x53,0x28,0x86,0xbd},
    {0xf1,0x10,0x1f,0x8c,0xbf,0x97,0x66,0xfd,0x67,0x64,0xd2,0xed,0x61,0x90,0x3f,0x21,0xca,0x9b,0x18,0xf5,0x7c,0xf3,0xe1,0xa2,0x3c,0xa1,0x35,0x08,0xa9,0x32,0x43,0xce,0x48,0xc0,0x45,0xdc,0x00,0x7f,0x26,0xa2,0x1b,0x3f,0x5e,0x0e,0x9d,0xf4,0xc2,0x0a},
    {0x27,0x5c,0xd0,0xe6,0x61,0xbb,0x8b,0x15,0x1c,0x64,0xd2,0x88,0xf1,0xf7,0x82,0xfb,0x91,0xa8,0xab,0xd5,0x68,0x58,0xd7,0x2b,0xab,0xb2,0xd4,0x76,0xf0,0x45,0x83,0x73,0xb4,0x1b,0x6a,0xb5,0xbf,0x17,0x4b,0xec,0x42,0x2e,0x53,0xfc,0x31,0x35,0xac,0x6e},
    {0x3a,0x5d,0x7a,0x87,0x97,0x02,0xc0,0x86,0xbc,0x96,0xd1,0xdd,0x8a,0xa1,0x5d,0x9c,0x46,0x44,0x6b,0x95,0x52,0x13,0x11,0xc6,0x06,0xfd,0xc4,0xe3,0x08,0xf4,0xb9,0x84,0xda,0x2d,0x0f,0x94,0x49,0xb3,0xba,0x84,0x25,0xec,0x7f,0xb8,0xc3,0x1b,0xc1,0x36},
    {0x47,0xc5,0x1a,0xce,0x1f,0xfa,0xcf,0xfd,0x74,0x94,0x72,0x46,0x82,0x61,0x57,0x83},
    {0x0f,0xc1,0x95,0x13,0xbf,0x6b,0xd8,0x78,0x03,0x70,0x16,0x70,0x6a,0x0e,0x57,0xbc,0x52,0x81,0x39,0x83,0x6b,0x9a,0x42,0xc3,0xd4,0x19,0xe4,0x98,0xe0,0xe1,0xfb,0x96,0x16,0xfd,0x66,0x91,0x38,0xd3,0x3a,0x11,0x05,0xe0,0x7c,0x72,0xb6,0x95,0x3b,0xcc},
    {0x71,0x3d,0xff,0x03,0x02,0xc8,0x50,0x86,0xec,0x5a,0xd0,0x76,0x8d,0xd6,0x5a,0x13,0xdd,0xd7,0x90,0x68,0xd8,0xd4,0xc6,0x21,0x2b,0x71,0x2e,0x41,0x64,0x94,0x49,0x11,0x14,0x80,0x23,0x00,0x44,0x18,0x5a,0x99,0x10,0x3e,0xd8,0x20,0x04,0xdd,0xbf,0xcc},
    {0x02,0x6f,0xdf,0x6b,0x50,0x74,0x1e,0x37,0x38,0x99,0xc9,0xf7,0xd5,0x40,0x6d,0x4e,0xb0,0x9f,0xc6,0x66,0x56,0x36,0xfc,0x1a,0x53,0x00,0x29,0xdd,0xf5,0xcf,0x3c,0xa5,0xa9,0x00,0xed,0xce,0x01,0xf5,0xf6,0x1e,0x2f,0x40,0x8c,0xdf,0x2f,0xd3,0xe7,0xe8},
    {0xca,0xd1,0x8a,0x8f,0xf6,0xc4,0xcc,0x3a,0xd4,0x87,0xb9,0x5f,0x97,0x69,0xe9,0xb6,0x1c,0x06,0x2a,0xef,0xd6,0x95,0x25,0x69,0xe6,0xe6,0x42,0x18,0x97,0x05,0x4c,0xfc,0x70,0xb5,0xfd,0xc6,0x60,0x5c,0x18,0x45,0x71,0x12,0xfc,0x6a,0xaa,0xd4,0x55,0x85},
};

const uint32_t HMAC_SHA3_384_MacLen[HMAC_SHA3_384_NUMBER_OF_TEST] = 
{
    48,48,48,48,16,48,48,48,48,
};

const uint8_t * const HMAC_SHA3_384_KeyPtr[HMAC_SHA3_384_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_384_Vector0_Key0,
    HMAC_SHA3_384_Vector0_Key1,
    HMAC_SHA3_384_Vector0_Key2,
    HMAC_SHA3_384_Vector0_Key3,
    HMAC_SHA3_384_Vector0_Key4,
    HMAC_SHA3_384_Vector0_Key5,
    HMAC_SHA3_384_Vector0_Key6,
    HMAC_SHA3_384_Vector0_Key5,
    HMAC_SHA3_384_Vector0_Key6,
};

const uint32_t HMAC_SHA3_384_KeyLen[HMAC_SHA3_384_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_384_Vector0_Key0),
    sizeof(HMAC_SHA3_384_Vector0_Key1),
    sizeof(HMAC_SHA3_384_Vector0_Key2),
    sizeof(HMAC_SHA3_384_Vector0_Key3),
    sizeof(HMAC_SHA3_384_Vector0_Key4),
    sizeof(HMAC_SHA3_384_Vector0_Key5),
    sizeof(HMAC_SHA3_384_Vector0_Key6),
    sizeof(HMAC_SHA3_384_Vector0_Key5),
    sizeof(HMAC_SHA3_384_Vector0_Key6),
};
uint8_t HMAC_SHA3_384_hash[HMAC_SHA3_384_NUMBER_OF_TEST][384/8];


/*******************************************************************************
* HMAC-SHA-512
********************************************************************************/
#define HMAC_SHA3_512_NUMBER_OF_TEST (9)

const uint8_t HMAC_SHA3_512_Vector0_Msg0[] = 
{
    0x48,0x69,0x20,0x54,0x68,0x65,0x72,0x65,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg1[] = 
{
    0x77,0x68,0x61,0x74,0x20,0x64,0x6f,0x20,0x79,0x61,0x20,0x77,0x61,0x6e,0x74,0x20,0x66,0x6f,0x72,0x20,0x6e,0x6f,0x74,0x68,0x69,0x6e,0x67,0x3f,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg2[] = 
{
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,
    0xdd,0xdd,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg3[] = 
{
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,0xcd,
    0xcd,0xcd,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg4[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x57,0x69,0x74,0x68,0x20,0x54,0x72,0x75,0x6e,0x63,0x61,
    0x74,0x69,0x6f,0x6e,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg5[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg6[] = 
{
    0x54,0x65,0x73,0x74,0x20,0x55,0x73,0x69,0x6e,0x67,0x20,0x4c,0x61,0x72,0x67,0x65,
    0x72,0x20,0x54,0x68,0x61,0x6e,0x20,0x42,0x6c,0x6f,0x63,0x6b,0x2d,0x53,0x69,0x7a,
    0x65,0x20,0x4b,0x65,0x79,0x20,0x2d,0x20,0x48,0x61,0x73,0x68,0x20,0x4b,0x65,0x79,
    0x20,0x46,0x69,0x72,0x73,0x74,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg7[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};
const uint8_t HMAC_SHA3_512_Vector0_Msg8[] = 
{
    0x54,0x68,0x69,0x73,0x20,0x69,0x73,0x20,0x61,0x20,0x74,0x65,0x73,0x74,0x20,0x75,
    0x73,0x69,0x6e,0x67,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,0x68,
    0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x6b,0x65,
    0x79,0x20,0x61,0x6e,0x64,0x20,0x61,0x20,0x6c,0x61,0x72,0x67,0x65,0x72,0x20,0x74,
    0x68,0x61,0x6e,0x20,0x62,0x6c,0x6f,0x63,0x6b,0x2d,0x73,0x69,0x7a,0x65,0x20,0x64,
    0x61,0x74,0x61,0x2e,0x20,0x54,0x68,0x65,0x20,0x6b,0x65,0x79,0x20,0x6e,0x65,0x65,
    0x64,0x73,0x20,0x74,0x6f,0x20,0x62,0x65,0x20,0x68,0x61,0x73,0x68,0x65,0x64,0x20,
    0x62,0x65,0x66,0x6f,0x72,0x65,0x20,0x62,0x65,0x69,0x6e,0x67,0x20,0x75,0x73,0x65,
    0x64,0x20,0x62,0x79,0x20,0x74,0x68,0x65,0x20,0x48,0x4d,0x41,0x43,0x20,0x61,0x6c,
    0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x2e,
};

const uint8_t * const HMAC_SHA3_512_MsgPtr[HMAC_SHA3_512_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_512_Vector0_Msg0,
    HMAC_SHA3_512_Vector0_Msg1,
    HMAC_SHA3_512_Vector0_Msg2,
    HMAC_SHA3_512_Vector0_Msg3,
    HMAC_SHA3_512_Vector0_Msg4,
    HMAC_SHA3_512_Vector0_Msg5,
    HMAC_SHA3_512_Vector0_Msg6,
    HMAC_SHA3_512_Vector0_Msg7,
    HMAC_SHA3_512_Vector0_Msg8,
};
const uint32_t HMAC_SHA3_512_MsgLen[HMAC_SHA3_512_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_512_Vector0_Msg0),
    sizeof(HMAC_SHA3_512_Vector0_Msg1),
    sizeof(HMAC_SHA3_512_Vector0_Msg2),
    sizeof(HMAC_SHA3_512_Vector0_Msg3),
    sizeof(HMAC_SHA3_512_Vector0_Msg4),
    sizeof(HMAC_SHA3_512_Vector0_Msg5),
    sizeof(HMAC_SHA3_512_Vector0_Msg6),
    sizeof(HMAC_SHA3_512_Vector0_Msg7),
    sizeof(HMAC_SHA3_512_Vector0_Msg8),
};

const uint8_t HMAC_SHA3_512_Vector0_Key0[] = {0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,0x0b,};
const uint8_t HMAC_SHA3_512_Vector0_Key1[] = {0x4a,0x65,0x66,0x65,};
const uint8_t HMAC_SHA3_512_Vector0_Key2[] = {0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa};
const uint8_t HMAC_SHA3_512_Vector0_Key3[] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19};
const uint8_t HMAC_SHA3_512_Vector0_Key4[] = {0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c};
const uint8_t HMAC_SHA3_512_Vector0_Key5[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};
const uint8_t HMAC_SHA3_512_Vector0_Key6[] = 
{
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,0xaa,
    0xaa,0xaa,0xaa
};

const uint8_t HMAC_SHA3_512_hash_ref[HMAC_SHA3_512_NUMBER_OF_TEST][512/8] = 
{
    {0xeb,0x3f,0xbd,0x4b,0x2e,0xaa,0xb8,0xf5,0xc5,0x04,0xbd,0x3a,0x41,0x46,0x5a,0xac,0xec,0x15,0x77,0x0a,0x7c,0xab,0xac,0x53,0x1e,0x48,0x2f,0x86,0x0b,0x5e,0xc7,0xba,0x47,0xcc,0xb2,0xc6,0xf2,0xaf,0xce,0x8f,0x88,0xd2,0x2b,0x6d,0xc6,0x13,0x80,0xf2,0x3a,0x66,0x8f,0xd3,0x88,0x8b,0xb8,0x05,0x37,0xc0,0xa0,0xb8,0x64,0x07,0x68,0x9e},
    {0x5a,0x4b,0xfe,0xab,0x61,0x66,0x42,0x7c,0x7a,0x36,0x47,0xb7,0x47,0x29,0x2b,0x83,0x84,0x53,0x7c,0xdb,0x89,0xaf,0xb3,0xbf,0x56,0x65,0xe4,0xc5,0xe7,0x09,0x35,0x0b,0x28,0x7b,0xae,0xc9,0x21,0xfd,0x7c,0xa0,0xee,0x7a,0x0c,0x31,0xd0,0x22,0xa9,0x5e,0x1f,0xc9,0x2b,0xa9,0xd7,0x7d,0xf8,0x83,0x96,0x02,0x75,0xbe,0xb4,0xe6,0x20,0x24},
    {0x30,0x9e,0x99,0xf9,0xec,0x07,0x5e,0xc6,0xc6,0xd4,0x75,0xed,0xa1,0x18,0x06,0x87,0xfc,0xf1,0x53,0x11,0x95,0x80,0x2a,0x99,0xb5,0x67,0x74,0x49,0xa8,0x62,0x51,0x82,0x85,0x1c,0xb3,0x32,0xaf,0xb6,0xa8,0x9c,0x41,0x13,0x25,0xfb,0xcb,0xcd,0x42,0xaf,0xcb,0x7b,0x6e,0x5a,0xab,0x7e,0xa4,0x2c,0x66,0x0f,0x97,0xfd,0x85,0x84,0xbf,0x03},
    {0xb2,0x7e,0xab,0x1d,0x6e,0x8d,0x87,0x46,0x1c,0x29,0xf7,0xf5,0x73,0x9d,0xd5,0x8e,0x98,0xaa,0x35,0xf8,0xe8,0x23,0xad,0x38,0xc5,0x49,0x2a,0x20,0x88,0xfa,0x02,0x81,0x99,0x3b,0xbf,0xff,0x9a,0x0e,0x9c,0x6b,0xf1,0x21,0xae,0x9e,0xc9,0xbb,0x09,0xd8,0x4a,0x5e,0xba,0xc8,0x17,0x18,0x2e,0xa9,0x74,0x67,0x3f,0xb1,0x33,0xca,0x0d,0x1d},
    {0x0f,0xa7,0x47,0x59,0x48,0xf4,0x3f,0x48,0xca,0x05,0x16,0x67,0x1e,0x18,0x97,0x8c},
    {0x00,0xf7,0x51,0xa9,0xe5,0x06,0x95,0xb0,0x90,0xed,0x69,0x11,0xa4,0xb6,0x55,0x24,0x95,0x1c,0xdc,0x15,0xa7,0x3a,0x5d,0x58,0xbb,0x55,0x21,0x5e,0xa2,0xcd,0x83,0x9a,0xc7,0x9d,0x2b,0x44,0xa3,0x9b,0xaf,0xab,0x27,0xe8,0x3f,0xde,0x9e,0x11,0xf6,0x34,0x0b,0x11,0xd9,0x91,0xb1,0xb9,0x1b,0xf2,0xee,0xe7,0xfc,0x87,0x24,0x26,0xc3,0xa4},
    {0xb1,0x48,0x35,0xc8,0x19,0xa2,0x90,0xef,0xb0,0x10,0xac,0xe6,0xd8,0x56,0x8d,0xc6,0xb8,0x4d,0xe6,0x0b,0xc4,0x9b,0x00,0x4c,0x3b,0x13,0xed,0xa7,0x63,0x58,0x94,0x51,0xe5,0xdd,0x74,0x29,0x28,0x84,0xd1,0xbd,0xce,0x64,0xe6,0xb9,0x19,0xdd,0x61,0xdc,0x9c,0x56,0xa2,0x82,0xa8,0x1c,0x0b,0xd1,0x4f,0x1f,0x36,0x5b,0x49,0xb8,0x3a,0x5b},
    {0x38,0xa4,0x56,0xa0,0x04,0xbd,0x10,0xd3,0x2c,0x9a,0xb8,0x33,0x66,0x84,0x11,0x28,0x62,0xc3,0xdb,0x61,0xad,0xcc,0xa3,0x18,0x29,0x35,0x5e,0xaf,0x46,0xfd,0x5c,0x73,0xd0,0x6a,0x1f,0x0d,0x13,0xfe,0xc9,0xa6,0x52,0xfb,0x38,0x11,0xb5,0x77,0xb1,0xb1,0xd1,0xb9,0x78,0x9f,0x97,0xae,0x5b,0x83,0xc6,0xf4,0x4d,0xfc,0xf1,0xd6,0x7e,0xba},
    {0xdc,0x03,0x0e,0xe7,0x88,0x70,0x34,0xf3,0x2c,0xf4,0x02,0xdf,0x34,0x62,0x2f,0x31,0x1f,0x3e,0x6c,0xf0,0x48,0x60,0xc6,0xbb,0xd7,0xfa,0x48,0x86,0x74,0x78,0x2b,0x46,0x59,0xfd,0xbd,0xf3,0xfd,0x87,0x78,0x52,0x88,0x5c,0xfe,0x6e,0x22,0x18,0x5f,0xe7,0xb2,0xee,0x95,0x20,0x43,0x62,0x9b,0xc9,0xd5,0xf3,0x29,0x8a,0x41,0xd0,0x2c,0x66},
};

const uint64_t HMAC_SHA3_512_MacLen[HMAC_SHA3_512_NUMBER_OF_TEST] = 
{
    64,64,64,64,16,64,64,64,64,
};

const uint8_t * const HMAC_SHA3_512_KeyPtr[HMAC_SHA3_512_NUMBER_OF_TEST] = 
{
    HMAC_SHA3_512_Vector0_Key0,
    HMAC_SHA3_512_Vector0_Key1,
    HMAC_SHA3_512_Vector0_Key2,
    HMAC_SHA3_512_Vector0_Key3,
    HMAC_SHA3_512_Vector0_Key4,
    HMAC_SHA3_512_Vector0_Key5,
    HMAC_SHA3_512_Vector0_Key6,
    HMAC_SHA3_512_Vector0_Key5,
    HMAC_SHA3_512_Vector0_Key6,
};

const uint32_t HMAC_SHA3_512_KeyLen[HMAC_SHA3_512_NUMBER_OF_TEST] = 
{
    sizeof(HMAC_SHA3_512_Vector0_Key0),
    sizeof(HMAC_SHA3_512_Vector0_Key1),
    sizeof(HMAC_SHA3_512_Vector0_Key2),
    sizeof(HMAC_SHA3_512_Vector0_Key3),
    sizeof(HMAC_SHA3_512_Vector0_Key4),
    sizeof(HMAC_SHA3_512_Vector0_Key5),
    sizeof(HMAC_SHA3_512_Vector0_Key6),
    sizeof(HMAC_SHA3_512_Vector0_Key5),
    sizeof(HMAC_SHA3_512_Vector0_Key6),
};
uint8_t HMAC_SHA3_512_hash[HMAC_SHA3_512_NUMBER_OF_TEST][512/8];

#endif

#endif

